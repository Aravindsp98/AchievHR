# events {
# worker_connections 1024 ;
# }

# http {
# include /etc/nginx/mime.types         ;
# default_type application/octet-stream ;
# sendfile on                           ;
# keepalive_timeout 65                  ;

# server {
# listen 8080           ;
# server_name localhost ;

# # Azure OAuth2 Proxy endpoints
# location /auth/azure {
# proxy_pass http://localhost:4180/auth                 ;
# proxy_set_header Host $host                           ;
# proxy_set_header X-Real-IP $remote_addr               ;
# proxy_set_header X-Scheme $scheme                     ;
# proxy_set_header X-Auth-Request-Redirect $request_uri ;
# }

# location /oauth2/azure/ {
# proxy_pass http://localhost:4180/oauth2/ ;
# proxy_set_header Host $host              ;
# proxy_set_header X-Real-IP $remote_addr  ;
# proxy_set_header X-Scheme $scheme        ;
# }

# # Google OAuth2 Proxy endpoints
# location /auth/google {
# proxy_pass http://localhost:4181/auth                 ;
# proxy_set_header Host $host                           ;
# proxy_set_header X-Real-IP $remote_addr               ;
# proxy_set_header X-Scheme $scheme                     ;
# proxy_set_header X-Auth-Request-Redirect $request_uri ;
# }

# location /oauth2/google/ {
# proxy_pass http://localhost:4181/oauth2/ ;
# proxy_set_header Host $host              ;
# proxy_set_header X-Real-IP $remote_addr  ;
# proxy_set_header X-Scheme $scheme        ;
# }

# # Protected routes with choice of authentication
# location /secured-items/ {
# # Check if user is authenticated with either provider
# auth_request /auth/azure      ;
# error_page 401 = @google_auth ;

# proxy_pass http://localhost:8000                                          ;
# proxy_set_header Host $host                                               ;
# proxy_set_header X-Real-IP $remote_addr                                   ;
# proxy_set_header X-Auth-Request-User $upstream_http_x_auth_request_user   ;
# proxy_set_header X-Auth-Request-Email $upstream_http_x_auth_request_email ;
# }

# location @google_auth {
# auth_request /auth/google               ;
# error_page 401 = /oauth2/google/sign_in ;

# proxy_pass http://localhost:8000                                          ;
# proxy_set_header Host $host                                               ;
# proxy_set_header X-Real-IP $remote_addr                                   ;
# proxy_set_header X-Auth-Request-User $upstream_http_x_auth_request_user   ;
# proxy_set_header X-Auth-Request-Email $upstream_http_x_auth_request_email ;
# }

# # FastAPI application
# location / {
# proxy_pass http://localhost:8000        ;
# proxy_set_header Host $host             ;
# proxy_set_header X-Real-IP $remote_addr ;
# }
# }
# }

# events {
# worker_connections 1024 ;
# }

# http {
# include /etc/nginx/mime.types         ;
# default_type application/octet-stream ;
# sendfile on                           ;
# keepalive_timeout 65                  ;

# server {
# listen 8080           ;
# server_name localhost ;

# # Azure OAuth2 Proxy endpoints
# location /auth/azure {
# proxy_pass http://localhost:4180/auth                 ;
# proxy_set_header Host $host                           ;
# proxy_set_header X-Real-IP $remote_addr               ;
# proxy_set_header X-Scheme $scheme                     ;
# proxy_set_header X-Auth-Request-Redirect $request_uri ;
# }

# location /oauth2/azure/ {
# proxy_pass http://localhost:4180/oauth2/ ;
# proxy_set_header Host $host              ;
# proxy_set_header X-Real-IP $remote_addr  ;
# proxy_set_header X-Scheme $scheme        ;
# }

# # Google OAuth2 Proxy endpoints
# location /auth/google {
# proxy_pass http://localhost:4181/auth                 ;
# proxy_set_header Host $host                           ;
# proxy_set_header X-Real-IP $remote_addr               ;
# proxy_set_header X-Scheme $scheme                     ;
# proxy_set_header X-Auth-Request-Redirect $request_uri ;
# }

# location /oauth2/google/ {
# proxy_pass http://localhost:4181/oauth2/ ;
# proxy_set_header Host $host              ;
# proxy_set_header X-Real-IP $remote_addr  ;
# proxy_set_header X-Scheme $scheme        ;
# }

# # Protected routes with choice of authentication
# location /secured-items/ {
# # Check if user is authenticated with either provider
# auth_request /auth/azure      ;
# error_page 401 = @google_auth ;

# proxy_pass http://localhost:8000                                          ;
# proxy_set_header Host $host                                               ;
# proxy_set_header X-Real-IP $remote_addr                                   ;
# proxy_set_header X-Auth-Request-User $upstream_http_x_auth_request_user   ;
# proxy_set_header X-Auth-Request-Email $upstream_http_x_auth_request_email ;
# }

# location @google_auth {
# auth_request /auth/google               ;
# error_page 401 = /oauth2/google/sign_in ;

# proxy_pass http://localhost:8000                                          ;
# proxy_set_header Host $host                                               ;
# proxy_set_header X-Real-IP $remote_addr                                   ;
# proxy_set_header X-Auth-Request-User $upstream_http_x_auth_request_user   ;
# proxy_set_header X-Auth-Request-Email $upstream_http_x_auth_request_email ;
# }

# # FastAPI application
# location / {
# proxy_pass http://localhost:8000        ;
# proxy_set_header Host $host             ;
# proxy_set_header X-Real-IP $remote_addr ;
# }
# }
# }







# Nginx configuration file

events {
    worker_connections 1024;  # Maximum number of simultaneous connections
}

http {
    include /etc/nginx/mime.types;  # Include MIME types
    default_type application/octet-stream;  # Default MIME type
    sendfile on;  # Enable sendfile
    keepalive_timeout 65;  # Keep-alive timeout

    server {
        listen 8080;  # Listen on port 8080
        server_name localhost;  # Server name

        # Default redirect to Microsoft login
        location / {
            return 302 /auth/azure;  # Redirect to Microsoft login by default
        }

        # Azure OAuth2 Proxy endpoints
        location /auth/azure {
            proxy_pass http://localhost:4180/auth/;  # Proxy to Azure OAuth2
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
        }

        location /oauth2/azure/ {
            proxy_pass http://localhost:4180/oauth2/;  # Proxy to Azure OAuth2
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
        }

        # Google OAuth2 Proxy endpoints
        location /auth/google {
            proxy_pass http://localhost:4181/auth/;  # Proxy to Google OAuth2
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
        }

        location /oauth2/google/ {
            proxy_pass http://localhost:4181/oauth2/;  # Proxy to Google OAuth2
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
        }

        # Protected routes with choice of authentication
        location /secured-items/ {
            auth_request /auth/azure;  # First try Azure authentication
            error_page 401 = @google_auth;  # If unauthorized, try Google auth

            proxy_pass http://localhost:8000;  # Proxy to your application
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Auth-Request-User  $upstream_http_x_auth_request_user;
            proxy_set_header X-Auth-Request-Email $upstream_http_x_auth_request_email;
        }

        location @google_auth {
            auth_request /auth/google;  # Try Google authentication
            error_page 401 = /oauth2/google/sign_in;  # Redirect to Google sign-in if unauthorized

            proxy_pass http://localhost:8000;  # Proxy to your application
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Auth-Request-User  $upstream_http_x_auth_request_user;
            proxy_set_header X-Auth-Request-Email $upstream_http_x_auth_request_email;
        }
    }
}